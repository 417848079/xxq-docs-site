import{_ as a,c as s,o as e,a4 as n}from"./chunks/framework.C1Yd8iPn.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/k8s/k8s-1.27.x.md","filePath":"docs/k8s/k8s-1.27.x.md"}'),t={name:"docs/k8s/k8s-1.27.x.md"},i=n(`<h2 id="_1-master-环境软件部署" tabindex="-1">1. master 环境软件部署 <a class="header-anchor" href="#_1-master-环境软件部署" aria-label="Permalink to &quot;1. master 环境软件部署&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># kubeadm -- 集群管理使用</span></span>
<span class="line"><span># kubectl -- 管理集群资源对象环境</span></span>
<span class="line"><span># kubelet -- 采集节点数据 汇报给master</span></span>
<span class="line"><span>yum install kubeadm kubectl kubelet -y</span></span></code></pre></div><h2 id="_2-环境部署" tabindex="-1">2. 环境部署 <a class="header-anchor" href="#_2-环境部署" aria-label="Permalink to &quot;2. 环境部署&quot;">​</a></h2><ul><li><h2 id="_2-1-harbor-仓库操作" tabindex="-1">2.1 harbor 仓库操作 <a class="header-anchor" href="#_2-1-harbor-仓库操作" aria-label="Permalink to &quot;2.1 harbor 仓库操作&quot;">​</a></h2><ul><li><h2 id="_2-1-1-准备工作" tabindex="-1">2.1.1 准备工作 <a class="header-anchor" href="#_2-1-1-准备工作" aria-label="Permalink to &quot;2.1.1 准备工作&quot;">​</a></h2><blockquote><p>a. 安装 docker 环境<br> b. 安装 docker-compose</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>yum install -y docker-compose</span></span></code></pre></div></blockquote></li><li><h2 id="_2-1-2-获取软件" tabindex="-1">2.1.2 获取软件 <a class="header-anchor" href="#_2-1-2-获取软件" aria-label="Permalink to &quot;2.1.2 获取软件&quot;">​</a></h2><blockquote><p>a. 下载软件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mkdir /data/{softs,server} -p &amp;&amp; cd /data/softs</span></span>
<span class="line"><span>wget &gt;https://github.com/goharbor/harbor/releases/download/v2.5.0/harbor-offline-installer-v2.5.0.tgz</span></span></code></pre></div><p>b. 解压软件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tar -zxvf harbor-offline-installer-v2.5.0.tgz -C /data/server/</span></span>
<span class="line"><span>cd /data/server/harbor/</span></span></code></pre></div><p>c. 加载镜像</p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker images</span></span></code></pre></div><p>d. 备份配置<br> cp harbor.yml.tmpl harbor.yml</p></blockquote></li><li><h2 id="_2-1-3-修改配置" tabindex="-1">2.1.3 修改配置 <a class="header-anchor" href="#_2-1-3-修改配置" aria-label="Permalink to &quot;2.1.3 修改配置&quot;">​</a></h2><p>a.修改配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  [root@kubernetes-register /data/server/harbor]# vim harbor.yml.tmpl</span></span>
<span class="line"><span>  #   修改主机名</span></span>
<span class="line"><span>  hostname: kubernetes-register.sswang.com</span></span>
<span class="line"><span>  http:</span></span>
<span class="line"><span>    port: 80</span></span>
<span class="line"><span>  #https:  注释ssl相关的部分</span></span>
<span class="line"><span>  #  port: 443</span></span>
<span class="line"><span>  #  certificate: /your/certificate/path</span></span>
<span class="line"><span>  #  private_key: /your/private/key/path</span></span>
<span class="line"><span>  # 修改harbor的登录密码</span></span>
<span class="line"><span>  harbor_admin_password: 123456</span></span>
<span class="line"><span>  # 设定harbor的数据存储目录</span></span>
<span class="line"><span>  data_volume: /data/server/harbor/data</span></span></code></pre></div><p>b. 配置 harbor</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./prepare</span></span></code></pre></div><p>c. . 启动 harbor</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./install.sh</span></span></code></pre></div><p>d. 检查效果</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker-compose ps</span></span></code></pre></div></li><li><h2 id="_2-1-4-定制服务启动文件" tabindex="-1">2.1.4 定制服务启动文件 <a class="header-anchor" href="#_2-1-4-定制服务启动文件" aria-label="Permalink to &quot;2.1.4 定制服务启动文件&quot;">​</a></h2><p>a. 定制服务启动文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/etc/systemd/system/harbor.service [Unit] Description=Harbor After=docker.service systemd-networkd.service systemd-resolved.service Requires=docker.service Documentation=http://github.com/vmware/harbor [Service] Type=simple Restart=on-failure RestartSec=5 #需要注意harbor的安装位置 ExecStart=/usr/bin/docker-compose --file /data/server/harbor/docker-compose.yml up ExecStop=/usr/bin/docker-compose --file /data/server/harbor/docker-compose.yml down [Install] WantedBy=multi-user.target</span></span></code></pre></div></li></ul></li><li><h4 id="_2-2-列出基于指定-kubernetes-版本所需的所有-docker-镜像" tabindex="-1">2.2 列出基于指定 Kubernetes 版本所需的所有 Docker 镜像 <a class="header-anchor" href="#_2-2-列出基于指定-kubernetes-版本所需的所有-docker-镜像" aria-label="Permalink to &quot;2.2 列出基于指定 Kubernetes 版本所需的所有 Docker 镜像&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kubeadm config images list</span></span></code></pre></div></li><li><h4 id="_2-3-kubeadm-config-images-list-awk-f-print-nf" tabindex="-1">2.3 kubeadm config images list | awk -F &#39;/&#39; &#39;{print $NF}&#39; <a class="header-anchor" href="#_2-3-kubeadm-config-images-list-awk-f-print-nf" aria-label="Permalink to &quot;2.3 kubeadm config images list | awk -F &#39;/&#39; &#39;{print $NF}&#39;&quot;">​</a></h4><ul><li><ol><li>kubeadm config images list：列出基于指定 Kubernetes 版本所需的所有 Docker 镜像。</li></ol></li><li><ol start="2"><li>awk -F &#39;/&#39; &#39;{print $NF}&#39;：使用 awk 工具处理上一步的输出。-F &#39;/&#39; 指定字段分隔符为斜杠（/），&#39;{print $NF}&#39; 打印每行的最后一个字段（$NF 表示“最后一个字段”的意思）。</li></ol></li></ul></li></ul>`,4),p=[i];function l(o,r,c,d,h,b){return e(),s("div",null,p)}const m=a(t,[["render",l]]);export{k as __pageData,m as default};

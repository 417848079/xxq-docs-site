import{_ as s,c as a,o as i,a4 as t}from"./chunks/framework.C1Yd8iPn.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/back/Java学习笔记.md","filePath":"docs/back/Java学习笔记.md"}'),n={name:"docs/back/Java学习笔记.md"},e=t(`<h2 id="_1-contains" tabindex="-1">1. contains <a class="header-anchor" href="#_1-contains" aria-label="Permalink to &quot;1. contains&quot;">​</a></h2><p>contains 方法通常用于检查某个集合（如 List、Set）是否包含特定的元素，或者字符串是否包含特定的子字符串。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] args){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   String url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://www.google.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;google&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><h2 id="_2-equals" tabindex="-1">2. equals <a class="header-anchor" href="#_2-equals" aria-label="Permalink to &quot;2. equals&quot;">​</a></h2><p>默认情况下，Object 类的 equals() 方法是比较两个对象的引用是否相同，即只有当两个引用指向内存中的同一个对象时，equals() 方法才会返回 true。</p>`,5),l=[e];function h(p,k,r,o,d,c){return i(),a("div",null,l)}const g=s(n,[["render",h]]);export{_ as __pageData,g as default};
